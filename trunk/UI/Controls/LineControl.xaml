<!--
    This file is part of Adventure Author.
 
    Adventure Author is copyright Heriot-Watt University 2006-2007.
 
    This copyright and licence apply to all source code, compiled code,
    documentation, graphics and auxiliary files, except where otherwise stated.
 
    Adventure Author is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
 
    Adventure Author is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<UserControl x:Class="AdventureAuthor.UI.Controls.LineControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:uic="clr-namespace:AdventureAuthor.UI.Controls"
    xmlns:nwn2cd="clr-namespace:NWN2Toolset.NWN2.Data.ConversationData;assembly=NWN2Toolset"
	IsEnabled="True" Focusable="True" MouseDown="OnMouseDown" GotFocus="OnGotFocus" LostFocus="OnLostFocus" 
    MouseDoubleClick="OnClick_GoToPage" Padding="6">
	
	<UserControl.Resources>
		
		<x:Array x:Key="ActionsMenu" Type="MenuItem">
			<MenuItem Header="*TEMP - setup variables*" Click="SetupVariables"/>
			<MenuItem Header="Advance time" Click="OnClick_AdvanceTime"/>
			<MenuItem Header="Attack the player" Click="OnClick_Attack"/>
			<MenuItem Header="Create a creature" Click="OnClick_CreateCreature"/>
			<MenuItem Header="Create an item" Click="OnClick_CreateItem"/>
			<MenuItem Header="Create a placeable" Click="OnClick_CreatePlaceable"/> <!--leave out Waypoint and Store-->
			<MenuItem Header="Destroy an object" Click="OnClick_DestroyObject"/>
			<MenuItem Header="Display a message" Click="OnClick_DisplayMessage"/>
			<MenuItem Header="End the game" Click="OnClick_EndGame"/>
			<MenuItem Header="Fade to black" Click="OnClick_FadeToBlack"/>
			<MenuItem Header="Give the player gold" Click="OnClick_GiveGold"/>
			<MenuItem Header="Give the player an item" Click="OnClick_GiveItem"/>
			<MenuItem Header="Give the player a henchman" Click="OnClick_AddHenchmanForPlayer"/>
			<MenuItem Header="Give someone else a henchman" Click="OnClick_AddHenchmanForCreature"/>
			<MenuItem Header="Heal the player" Click="OnClick_HealPlayer"/>
			<MenuItem Header="Kill a creature" Click="OnClick_Kill"/>
			<MenuItem Header="Open a store" Click="OnClick_OpenStore"/>
			<MenuItem Header="Play an animation" Click="OnClick_PlayAnimation"/>
			<MenuItem Header="Set a number variable" Click="OnClick_SetIntVariable"/>
			<MenuItem Header="Set a string variable" Click="OnClick_SetStringVariable"/>
			<MenuItem Header="Shift good/evil alignment" Click="OnClick_ShiftGoodEvilAlignment"/>
			<MenuItem Header="Shift law/chaos alignment" Click="OnClick_ShiftLawChaosAlignment"/>
		</x:Array>
		
		<x:Array x:Key="ConditionsMenu" Type="MenuItem">
			<MenuItem Header="If a certain creature is dead" Click="OnClick_CreatureIsDead"/>
			<MenuItem Header="If a particular object is nearby" Click="OnClick_ObjectIsNearPlayer"/>
			<MenuItem Header="If any enemy is nearby" Click="OnClick_EnemyIsNearPlayer"/>
			<MenuItem Header="If the player has a certain amount of gold" Click="OnClick_PlayerHasGold"/>
			<MenuItem Header="If the player has a certain number of items" Click="OnClick_PlayerHasNumberOfItems"/>
			<MenuItem Header="If the player is male" Click="OnClick_PlayerIsMale"/>
			<MenuItem Header="If the player is female" Click="OnClick_PlayerIsFemale"/>
			<MenuItem Header="If the player is good" Click="OnClick_PlayerIsGood"/>
			<MenuItem Header="If the player is evil" Click="OnClick_PlayerIsEvil"/>
			<MenuItem Header="If the player is lawful" Click="OnClick_PlayerIsLawful"/>
			<MenuItem Header="If the player is chaotic" Click="OnClick_PlayerIsChaotic"/>		
			<MenuItem Header="If a number variable has a certain value" Click="OnClick_IntHasValue"/>
			<MenuItem Header="If a string variable has a certain value" Click="OnClick_StringHasValue"/>
		</x:Array>		
		
		<ContextMenu x:Key="LineControlContextMenu">
			<MenuItem Header="Go back" Click="OnClick_GoBack" Name="MenuItem_GoBack" IsEnabled="false"/> <!--Broken-->
			<MenuItem Header="Set camera angle" Click="OnClick_SetCamera" IsEnabled="false"/>
			<MenuItem Header="Set sound clip" Click="OnClick_SetSound" IsEnabled="false"/>
			<MenuItem Header="Add an action">
			<MenuItem.ItemsSource>
				<StaticResource ResourceKey="ActionsMenu"/>
			</MenuItem.ItemsSource>
			</MenuItem>
			<MenuItem Header="Add a condition" Name="MenuItem_AddCondition">
			<MenuItem.ItemsSource>
				<StaticResource ResourceKey="ConditionsMenu"/>
			</MenuItem.ItemsSource>
			</MenuItem>
			<MenuItem Header="Delete line" Click="OnClick_Delete"/>
			<MenuItem Header="Go to page" Click="OnClick_GoToPage" Name="MenuItem_GoToPage"/>
			<MenuItem Header="Make into choice" Click="OnClick_MakeIntoBranch" Name="MenuItem_MakeIntoChoice"/>
		</ContextMenu>
	
	</UserControl.Resources>
	
	<UserControl.ContextMenu>		
		<StaticResource ResourceKey="LineControlContextMenu"/>
	</UserControl.ContextMenu>
	
	<UserControl.Style>
		<Style TargetType="{x:Type uic:LineControl}">
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="Background" Value="Wheat"/>
			</Trigger>
		</Style.Triggers>		
		</Style>
	</UserControl.Style>
	
	<UserControl.Triggers>
		<EventTrigger RoutedEvent="Button.Click" SourceName="SoundButton">
		<EventTrigger.Actions>
			<!--<SoundPlayerAction Source="C:\ConversationWriter\ds_doumbek_slap.wav"></SoundPlayerAction>-->
		</EventTrigger.Actions>
		</EventTrigger>
	</UserControl.Triggers>
	
    <Grid x:Name="LineControlGrid">		
		<Grid.RowDefinitions>
    		<RowDefinition MinHeight="0"/> <!--Condition control-->
    		<RowDefinition MinHeight="34" MaxHeight="34"/> <!--Speaker and first line of dialogue-->
    		<RowDefinition MinHeight="0" Height="*"/> <!--Any subsequent lines of dialogue-->
    		<RowDefinition MinHeight="0"/> <!--Action controls-->
    	</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="100"/> <!--Buttons-->
    		<ColumnDefinition Width="200"/> <!--Speaker-->
    		<ColumnDefinition MinWidth="350" MaxWidth="750" Width="*"/> <!--Dialogue-->
    	</Grid.ColumnDefinitions>
    	    	
    	<StackPanel Name="LineControlButtonsPanel" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" >
	    	<Button x:Name="SoundButton" Margin="6" Width="20" Height="20" IsEnabled="false" Opacity="0.0" Click="OnClick_SetSound">
    			<Button.ToolTip>
    				<ToolTip>Add a sound clip to this line (doesn't work yet)</ToolTip>
    			</Button.ToolTip>
	    		<Image Source="C:\ConversationWriter\speakericon.jpg" />
	    	</Button>
 	    	<Button x:Name="unusedButton" Margin="6" Width="20" Height="20" IsEnabled="false" Opacity="0.0">
	    	</Button>	    	
    		<Button x:Name="DeleteLineButton" Margin="6" Width="20" Height="20" IsEnabled="false" Opacity="0.0" Click="OnClick_Delete">
    			<Button.ToolTip>
    				<ToolTip>Delete this line</ToolTip>
    			</Button.ToolTip>
	    		<Image Source="C:\ConversationWriter\deleteicon.jpg" />
	    	</Button>   	
    	</StackPanel>
    	
    	<TextBlock x:Name="SpeakerLabel" Grid.Row="1" Grid.Column="1" FontSize="22" Padding="6" Margin="0,0,25,0" TextAlignment="Right"/>
    	
    	<TextBox x:Name="Dialogue" Width="700" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" TextWrapping="Wrap" FontSize="22" FontWeight="4" Focusable="true"
    	         BorderThickness="1" BorderBrush="Transparent" Background="Transparent" Padding="4" GotFocus="OnGotFocus" LostFocus="OnLostFocus">
    		<TextBox.Text>
    			<Binding Source="{StaticResource LineText}" Path="Value" Mode="OneTime"/>    		
    			<!--<Binding ElementName="SpeakerLabel" Path="Text"></Binding> (works) -->
    		</TextBox.Text>    
    	</TextBox>
	
		<StackPanel x:Name="ActionsPanel" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Vertical"/>
	
	</Grid>

</UserControl>
