<!--
    This file is part of Adventure Author.
 
    Adventure Author is copyright Heriot-Watt University 2006-2007.
 
    This copyright and licence apply to all source code, compiled code,
    documentation, graphics and auxiliary files, except where otherwise stated.
 
    Adventure Author is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
 
    Adventure Author is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<Button x:Class="AdventureAuthor.UI.Controls.PageControl"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:uic="clr-namespace:AdventureAuthor.UI.Controls"
xmlns:cw="clr-namespace:AdventureAuthor.ConversationWriter"
ClipToBounds="true"
>
	<Button.Style>
		<Style TargetType="{x:Type uic:PageControl}">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate TargetType="uic:PageControl">
						<Grid Background="#00FFFFFF">
							<Ellipse Name="outerCircle" Fill="Black" Width="{x:Static cw:Conversation.UNSELECTED_NODE_OUTER_DIAMETER}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"/>
							<Ellipse Name="innerCircle" Width="{x:Static cw:Conversation.UNSELECTED_NODE_INNER_DIAMETER}" Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}">
								<Ellipse.Fill>
									<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
										<GradientStop x:Name="Gradient1" Offset="0" Color="#FF8888FF"/>
										<GradientStop x:Name="Gradient2" Offset="1" Color="#FF0000FF"/>
									</LinearGradientBrush>
								</Ellipse.Fill>
							</Ellipse>       			 
						</Grid>        	
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="outerCircle" Property="Width" Value="{x:Static cw:Conversation.SELECTED_NODE_OUTER_DIAMETER}"/>
								<Setter TargetName="innerCircle" Property="Width" Value="{x:Static cw:Conversation.SELECTED_NODE_INNER_DIAMETER}"/>
								<Trigger.EnterActions>	
									<BeginStoryboard>
										<Storyboard>
											<Storyboard.Children>
												<ColorAnimation To="#FFF0F8FF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="Gradient1" Storyboard.TargetProperty="Color"/>
												<ColorAnimation To="#FF0000FF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="Gradient2" Storyboard.TargetProperty="Color"/>
												<DoubleAnimation Storyboard.TargetName="outerCircle" Storyboard.TargetProperty="Width" 
												                 From="{x:Static cw:Conversation.UNSELECTED_NODE_OUTER_DIAMETER}" To="{x:Static cw:Conversation.SELECTED_NODE_OUTER_DIAMETER}"
												                 Duration="00:00:00.2000000" RepeatBehavior="1x" AutoReverse="False"/>
												<DoubleAnimation Storyboard.TargetName="innerCircle" Storyboard.TargetProperty="Width"
												                 From="{x:Static cw:Conversation.UNSELECTED_NODE_INNER_DIAMETER}" To="{x:Static cw:Conversation.SELECTED_NODE_INNER_DIAMETER}"
												                 Duration="00:00:00.2000000" RepeatBehavior="1x" AutoReverse="False"/>	
											</Storyboard.Children>						
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard> 
										<Storyboard>
											<Storyboard.Children>
												<ColorAnimation To="#FF8888FF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="Gradient1" Storyboard.TargetProperty="Color"/>
												<ColorAnimation To="#FF0000FF" FillBehavior="HoldEnd" Duration="00:00:00.2000000" Storyboard.TargetName="Gradient2" Storyboard.TargetProperty="Color"/>
												<DoubleAnimation Storyboard.TargetName="outerCircle" Storyboard.TargetProperty="Width" 
												                 From="{x:Static cw:Conversation.SELECTED_NODE_OUTER_DIAMETER}" To="{x:Static cw:Conversation.UNSELECTED_NODE_OUTER_DIAMETER}"
												                 Duration="00:00:00.2000000" RepeatBehavior="1x" AutoReverse="False"/>
												<DoubleAnimation Storyboard.TargetName="innerCircle" Storyboard.TargetProperty="Width"
												                 From="{x:Static cw:Conversation.SELECTED_NODE_INNER_DIAMETER}" To="{x:Static cw:Conversation.UNSELECTED_NODE_INNER_DIAMETER}"
												                 Duration="00:00:00.2000000" RepeatBehavior="1x" AutoReverse="False"/>
											</Storyboard.Children>						
										</Storyboard>
									</BeginStoryboard>   
								</Trigger.ExitActions>		
							</Trigger>	
							<Trigger Property="IsPartOfPath" Value="True">
								<!--TODO-->
							</Trigger>	
						</ControlTemplate.Triggers>
					</ControlTemplate>          	
				</Setter.Value>
			</Setter>
		</Style>
	</Button.Style>
</Button>
