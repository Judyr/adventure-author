<UserControl x:Class="AdventureAuthor.Tasks.TaskPad"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
    xmlns:tasks="clr-namespace:AdventureAuthor.Tasks"
    xmlns:utils="clr-namespace:AdventureAuthor.Utils;assembly=AAUtils"
	Width="420" Height="500">
	
	<UserControl.Resources>
		
		<tasks:TaskStateToBooleanConverter x:Key="taskCompletedConverter"/>	
		<tasks:TaskStateToTextDecorationConverter x:Key="taskCompletedStrikethroughConverter"/>	
		
		<!--Defining the appearance of a tag-->
		<DataTemplate x:Key="tagDataTemplate">
			<TextBox Text="{Binding Mode=TwoWay, Path=.}"
					 Padding="3"
					 Margin="2"/>
		</DataTemplate>
		
		<!--Defining the appearance of the list of tags-->
		<ItemsPanelTemplate x:Key="tagListTemplate">
			<StackPanel Orientation="Horizontal" Background="LightGreen"/>
		</ItemsPanelTemplate>
		
		<!--Defining the appearance of a button on a task control (Edit, Delete etc.)-->
		<Style x:Key="taskControlButtonStyle" TargetType="Button">
			<!--Set to true to not get any properties from the themes.-->
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Margin" Value="4"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">						
						<Grid>
							<TextBlock x:Name="contentBlock"
							           FontSize="11"
							           Foreground="Blue" 
							           FontWeight="SemiBold"
							           TextDecorations="Underline">
								<ContentPresenter HorizontalAlignment="Center"
								                  VerticalAlignment="Center"/>
							</TextBlock>                  
						</Grid>					
						<!--<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="contentBlock" Property="Background" Value="LightGray"/>
							</Trigger>
						</ControlTemplate.Triggers>	-->				
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>	
		
		<!--Defining the appearance of a Task-->
		<DataTemplate x:Key="taskDataTemplate">
			<Grid x:Name="taskGrid" 
			      Margin="5"
				  Background="Transparent">
				<Grid.RowDefinitions>
					<RowDefinition/> <!--Description-->
					<RowDefinition/> <!--Tags-->
					<RowDefinition/> <!--Controls (when selected)-->
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.67*"/>
					<ColumnDefinition Width="55"/>
				</Grid.ColumnDefinitions>
			
				<!--UpdateSourceTrigger is set to PropertyChanged to ensure that you always get the latest value
					for a TextBox that has currently got focus. By default, only upon losing focus does
					the TextBox update its value, which is fine until you need to save and close. A much better
					way to deal with this would be to call UpdateSource() on the binding, but I can't work out
					how to get the binding object, since it's defined inside a data template.
					TODO: Bea Costa's weblog has an article on updating bindings within data templates.-->
				<utils:EditableTextBox
					x:Name="descriptionBox"
					Grid.Row="0" Grid.Column="0"
				    Width="300"					
					Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}"						
					TextDecorations="{Binding Path=State, Converter={StaticResource taskCompletedStrikethroughConverter}}"
				    TextWrapping="Wrap"
				    VerticalAlignment="Center"
				    HorizontalAlignment="Right"	
					utils:EditableTextBox.IsEditable="False"
				    Padding="10"
					FontSize="16" 
				    FontWeight="Thin"
				    Foreground="Black"/>
				
				<CheckBox x:Name="completedCheckBox"
				          Grid.Row="0" 
				          Grid.RowSpan="2" 
				          Grid.Column="1"
				          HorizontalAlignment="Center"
				          VerticalAlignment="Center"
						  IsChecked="{Binding Path=State, Converter={StaticResource taskCompletedConverter}}">
					<CheckBox.LayoutTransform>
						<ScaleTransform ScaleX="2" 
						                ScaleY="2"
										PresentationOptions:Freeze="true"/>
					</CheckBox.LayoutTransform>
				</CheckBox>		
				
				<ListBox Grid.Row="1" Grid.Column="0"
						 Margin="5"
						 ItemsSource="{Binding Path=Tags}"
						 ItemTemplate="{StaticResource tagDataTemplate}"
						 ItemsPanel="{StaticResource tagListTemplate}"
			        	 SelectionMode="Single"/>
			
				<StackPanel x:Name="taskControlPanel"
							Grid.Row="2" Grid.Column="0"
				            Visibility="Collapsed"
							Orientation="Horizontal"
							Width="300">
					
					<!--Doesn't work properly if you just set this style to apply to all buttons
					by putting it in StackPanel.Resources - not sure why.-->
					<Button Content="Delete" Style="{StaticResource taskControlButtonStyle}"
							Click="OnClick_DeleteTask"/>
					<Button Content="Edit" Style="{StaticResource taskControlButtonStyle}"
							Click="OnClick_EditTask"/>
					<Button Content="Change category" Style="{StaticResource taskControlButtonStyle}"
							Click="OnClick_ChangeCategoryOfTask"/>
					<Button Content="Move up" Style="{StaticResource taskControlButtonStyle}"
							Click="OnClick_MoveUp"/>
					<Button Content="Move down" Style="{StaticResource taskControlButtonStyle}"
							Click="OnClick_MoveDown"/>
				
				</StackPanel>
			
			</Grid>			
		
			<DataTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter TargetName="taskGrid" Property="Background" Value="LightGray"/>
				</Trigger>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}"
				             Value="True">
					<Setter TargetName="taskControlPanel" Property="Visibility" Value="Visible"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		
		</DataTemplate>
	
	</UserControl.Resources>
	
	<UserControl.Background>
		<LinearGradientBrush StartPoint="1,0" EndPoint="0,1" PresentationOptions:Freeze="true">
			<GradientStop Color="LemonChiffon" Offset="1.5"/>
			<GradientStop Color="Yellow" Offset="4"/>
		</LinearGradientBrush>
	</UserControl.Background>
		
    <Border BorderThickness="2" BorderBrush="LightGray">
		
    	<!--<Border.BitmapEffect>
    		<DropShadowBitmapEffect PresentationOptions:Freeze="true"/>
    	</Border.BitmapEffect>-->
    	
		<Grid Name="MainGrid">
    		<Grid.RowDefinitions>
				<RowDefinition Height="70"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="100"/>
			</Grid.RowDefinitions>
			
			<TextBlock Grid.Row="0"
			           Grid.Column="0"
					   Text="Things To Do" 
			           VerticalAlignment="Center"
			           HorizontalAlignment="Center"
			           FontSize="32" 
			           FontWeight="SemiBold" 
			           FontFamily="Comic Sans MS"
					   Foreground="DarkBlue"/>
			
			<ListBox x:Name="taskListBox" 
			         Grid.Row="1"
					 Grid.Column="0"
			         Padding="15"
					 ItemsSource="{Binding Path=., Mode=TwoWay}"
					 ItemTemplate="{StaticResource taskDataTemplate}"
			         SelectionMode="Single"
					 Background="Transparent"
					 BorderBrush="Transparent"/>
			
			<tasks:DogEar Grid.Row="2" Grid.Column="0"
			              Corner="BottomRight"/>
			<tasks:DogEar Grid.Row="2" Grid.Column="0"
			              Corner="BottomLeft"/>
    	</Grid>
	</Border>

</UserControl>