<UserControl x:Class="AdventureAuthor.Tasks.TaskPad"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:tasks="clr-namespace:AdventureAuthor.Tasks"
    xmlns:utils="clr-namespace:AdventureAuthor.Utils;assembly=AAUtils"
    KeyDown="HandleKeyPresses"
    Background="CornSilk"
	Width="255" Height="650"
	Name="rarface">
	
	<!--<UserControl.BitmapEffect>
		<BevelBitmapEffect Relief="0.3"/>
	</UserControl.BitmapEffect>-->
	
	<UserControl.Resources>
		
		<tasks:TaskStateToTextDecorationConverter x:Key="taskCompletedStrikethroughConverter"/>	
		<tasks:DoubleToDoubleConverter x:Key="reduceWidthConverter"/>
		<tasks:TruncateTextConverter x:Key="truncateText"/>
		<tasks:DisableIfNoTaskSelectedConverter x:Key="disableIfNoTaskSelected"/>
		<tasks:DisableIfNoTaskCollectionOpenConverter x:Key="disableIfNoTaskCollectionOpen"/>
		<tasks:InverseBooleanToVisibilityConverter x:Key="showIfTaskCollectionIsEmpty"/>
		
		<CollectionViewSource x:Key="tasksCollectionViewSource"
							  Source="{Binding Path=., Mode=TwoWay}"/>
		
		<!--Defining the appearance of a Task in the list view, in terms of the Task itself-->
		<DataTemplate x:Key="taskDataTemplateMinimal">
			<TextBlock x:Name="descriptionBox" 
				       Grid.Row="0" 
				       Grid.Column="0"
					   TextDecorations="{Binding Path=State, Converter={StaticResource taskCompletedStrikethroughConverter}}"
					   TextWrapping="Wrap"
					   Width="235"
					   FontFamily="Comic Sans MS"
					   FontSize="13"	           
					   Padding="8,4,0,4">
				<TextBlock.Text>
					<Binding Path="Description"
							 Converter="{StaticResource truncateText}">
						<Binding.ConverterParameter>
							<sys:Int32>70</sys:Int32>
						</Binding.ConverterParameter>
					</Binding>
				</TextBlock.Text>
			</TextBlock>
		</DataTemplate>
	
		<!--Defining the appearance of a Task in the list view in terms of its ListBoxItem container.
			Uses a style to set the ControlTemplate of each ListBoxItem.-->
		<Style x:Key="taskContainerStyle" TargetType="ListBoxItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid x:Name="taskContainerGrid">
							
							<!--Use DoubleToDoubleConverter to bind the width of this control to 
							slightly less than the width of the parent-->
							<Grid.Width>
								<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}"
										 Path="Width"
										 Converter="{StaticResource reduceWidthConverter}">
									<Binding.ConverterParameter>
										<sys:Double>-10</sys:Double>
									</Binding.ConverterParameter>
								</Binding>
							</Grid.Width>
							
							<Grid.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Move down"
											  Click="MoveSelectedTaskDown"/>
									<MenuItem Header="Move up"
											  Click="MoveSelectedTaskUp"/>
									<Separator/>
									<MenuItem Header="Delete"
											  Click="DeleteSelectedTask"/>								
								</ContextMenu>
							</Grid.ContextMenu>
							
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							
							<ContentPresenter Grid.Row="0" 
											  Grid.Column="0"/>
							<Line Grid.Row="1"
							      Grid.Column="0"
							      Stroke="Gray"
							      StrokeThickness="0.5"				      
								  X1="0"
								  X2="{Binding ElementName=taskContainerGrid, Path=ActualWidth}"
								  Y1="0"
								  Y2="0"/>
						</Grid>
						
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="taskContainerGrid" Property="Background" Value="BlanchedAlmond"/>
								<Setter TargetName="taskContainerGrid" Property="BitmapEffect">
									<Setter.Value>
										<OuterGlowBitmapEffect/>
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
	</UserControl.Resources>
		
    <Border BorderThickness="2" BorderBrush="LightGray">
    	
		<Grid Name="MainGrid">
    		<Grid.RowDefinitions>
				<RowDefinition Height="70"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="45"/>
				<RowDefinition Height="360"/>
			</Grid.RowDefinitions>
						
			<TextBlock x:Name="headingTextBlock"
					   Grid.Row="0"
			           Grid.Column="0"
					   Text="MEMO" 
			           VerticalAlignment="Center"
			           HorizontalAlignment="Center"
			           FontSize="44" 
			           FontWeight="SemiBold" 
			           FontFamily="Times New Roman"
					   Foreground="DarkBlue">
				<TextBlock.BitmapEffect>
					<DropShadowBitmapEffect PresentationOptions:Freeze="True"
											Opacity="0.3"/>
				</TextBlock.BitmapEffect>
			</TextBlock>
			
			<ScrollViewer Grid.Row="1"
						  Grid.Column="0"
						  VerticalScrollBarVisibility="Auto"
						  HorizontalScrollBarVisibility="Hidden">			
				<ListBox x:Name="taskListBox"
						 ItemsSource="{Binding Source={StaticResource tasksCollectionViewSource}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"			         
				         SelectionMode="Single"
				         ScrollViewer.CanContentScroll="false"
						 Background="Transparent"
						 BorderBrush="Transparent"
						 ItemTemplate="{StaticResource taskDataTemplateMinimal}"
						 ItemContainerStyle="{StaticResource taskContainerStyle}"/>
			</ScrollViewer>
				
			<!--Text that appears when no task is selected-->
			<TextBlock Grid.Row="1"
					   Grid.Column="0"
					   FontSize="16"
					   FontFamily="Helvetica"
					   Foreground="DarkBlue"
					   VerticalAlignment="Center"
					   HorizontalAlignment="Center"
		      		   Visibility="{Binding ElementName=taskListBox, Path=HasItems, Converter={StaticResource showIfTaskCollectionIsEmpty}}"
					   TextWrapping="Wrap"
			           Width="{Binding ElementName=taskListBox, Path=ActualWidth}"
			           Padding="10"
			           Text="No tasks found."/>
			
			<StackPanel Grid.Row="2"
						Grid.Column="0"
						Orientation="Horizontal"
						FlowDirection="RightToLeft"
						VerticalAlignment="Top"
						Margin="3">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Width" Value="20"/>
						<Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=Width}"/>
						<Setter Property="Margin" Value="2"/>						
						<!--<Setter Property="BitmapEffect">
							<Setter.Value>
								<BevelBitmapEffect Relief="0.1"/>
							</Setter.Value>
						</Setter>-->
					
						<Style.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" Value="0.4"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</StackPanel.Resources>
				
				<Button x:Name="DeleteTaskButton"
						Click="DeleteSelectedTask"
						ToolTip="Delete the selected task"
						IsEnabled="{Binding ElementName=taskListBox, Path=SelectedItem, Converter={StaticResource disableIfNoTaskSelected}}"/>
				<Button x:Name="MoveTaskUpButton"
						Click="MoveSelectedTaskUp"
						ToolTip="Move the selected task up"
						IsEnabled="{Binding ElementName=taskListBox, Path=SelectedItem, Converter={StaticResource disableIfNoTaskSelected}}"/>
				<Button x:Name="MoveTaskDownButton"
						Click="MoveSelectedTaskDown"
						ToolTip="Move the selected task down"
						IsEnabled="{Binding ElementName=taskListBox, Path=SelectedItem, Converter={StaticResource disableIfNoTaskSelected}}"/>		
            	<Line Stroke="Black"
					  StrokeThickness="0.5"				      
					  X1="0"
					  X2="0"
					  Y1="0"
					  Y2="{Binding ElementName=DeleteTaskButton, Path=Height}"
					  Margin="3"/>
				<Button x:Name="AddTaskButton"
						ToolTip="Add a new task"
						IsEnabled="{Binding Converter={StaticResource disableIfNoTaskCollectionOpen}}"/>
			</StackPanel>
			
			<StackPanel x:Name="filterControlsPanel"
						Grid.Row="3" Grid.Column="0"
			            Orientation="Vertical"
			     		Background="AntiqueWhite">
				
				<StackPanel.Style>
					<Style>
						<Style.Triggers>
							<DataTrigger>
								<DataTrigger.Binding>
									<Binding>
										<Binding.RelativeSource>
											<RelativeSource Mode="FindAncestor" AncestorType="{x:Type tasks:TaskPad}"/>
										</Binding.RelativeSource>
										<Binding.Path>ShowFilterControls</Binding.Path>
									</Binding>
								</DataTrigger.Binding>
								<DataTrigger.Value>false</DataTrigger.Value>
								<Setter Property="ContentControl.Height" Value="30"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</StackPanel.Style>
				
				<StackPanel.Resources>
					<Style TargetType="RadioButton">
						<Setter Property="GroupName" Value="ShowHideCompletedTasksButtonGroup"/>
					</Style>
				</StackPanel.Resources>
				
				<WrapPanel Orientation="Vertical"
						   Margin="10">
					<RadioButton x:Name="showAllTasksRadioButton" 
								 Content="Show all tasks"
								 Checked="ShowBothCompletedAndUncompletedTasks"
								 IsChecked="true"/>
					<RadioButton Content="Show only uncompleted tasks"
								 Checked="ShowOnlyUncompletedTasks"/>			
					<RadioButton Content="Show only completed tasks"
								 Checked="ShowOnlyCompletedTasks"/>
				</WrapPanel>
			
				<StackPanel Orientation="Horizontal"
				            HorizontalAlignment="Left"					         
					        VerticalAlignment="Center"
							Margin="10">
					<TextBlock Text="Search:   "			         
					           VerticalAlignment="Center"/>				
					<TextBox x:Name="searchStringTextBox"
					         TextChanged="ShowOnlyTasksContainingSearchString"		         
					         VerticalAlignment="Center"
					         Width="170"/>				
				</StackPanel>
			
				<StackPanel Orientation="Vertical"
						    Margin="10">
					
					<Label Content="Only show tasks with tag..."/>
					
					<ListView x:Name="tagFilterListView"
							  SelectionChanged="OnlyShowTasksWithSelectedTag"
							  BorderThickness="0"
							  Background="Transparent">
						<ListView.Resources>
							<Style TargetType="ListViewItem">
								<Setter Property="Padding" Value="3"/>
							</Style>
						</ListView.Resources>
						<ListView.ItemTemplate>
							<DataTemplate>
								<Border CornerRadius="4" BorderThickness="2" BorderBrush="Red">
									<TextBlock Text="{Binding}"
											   HorizontalAlignment="Center"
											   VerticalAlignment="Center"
											   Padding="3"
									           Foreground="White"
											   Background="Maroon"/>
								</Border>
							</DataTemplate>
						</ListView.ItemTemplate>
						
						<ListView.ItemsSource>
							<Binding Path="AllTags" Mode="OneWay">
								<Binding.RelativeSource>
									<RelativeSource Mode="FindAncestor" AncestorType="{x:Type tasks:MyTasksWindow}"/>
								</Binding.RelativeSource>
							</Binding>
						</ListView.ItemsSource>
						
						<ListView.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel Orientation="Horizontal">
									<WrapPanel.Width>
										<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}" Path="ActualWidth" Converter="{StaticResource reduceWidthConverter}">
											<Binding.ConverterParameter>
												<sys:Double>-5</sys:Double>
											</Binding.ConverterParameter>
										</Binding>
									</WrapPanel.Width>
								</WrapPanel>
							</ItemsPanelTemplate>
						</ListView.ItemsPanel>         
					
					</ListView>
				
					<Button Content="Clear"
							HorizontalAlignment="Right"
							Click="ClearTagFilter"/>
				
					<Button Content="Clear all"
							HorizontalAlignment="Right"
							Click="ClearAllFilters"/>
				
					<Button Content="Show/Hide"
							VerticalAlignment="Bottom"
							Click="ShowOrHideFilteringControls"/>
				</StackPanel>
			
			</StackPanel>
			
			<!--<tasks:DogEar Grid.Row="3" Grid.Column="0"
			              Corner="BottomRight"
						  MouseDown="ShowNextPage"/>
			<tasks:DogEar Grid.Row="3" Grid.Column="0"
			              Corner="BottomLeft"
						  MouseDown="ShowPreviousPage"/>-->
    	</Grid>
	</Border>

</UserControl>